{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/neo/Desktop/react/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  font-size: 1.3125rem;\\n  color: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid \",\";\\n  padding-bottom: 3rem;\\n  margin-bottom: 3rem;\\n  h1 {\\n    font-size: 3rem;\\n    line-height: 1.5;\\n    margin: 0;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 4rem;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import palette from'../../lib/styles/palette';import SubInfo from'../common/SubInfo';import Tags from'../common/Tags';import{Helmet}from'react-helmet-async';var PostViewerBlock=styled.div(_templateObject());var PostHead=styled.div(_templateObject2(),palette.gray[2]);var PostContent=styled.div(_templateObject3(),palette.gray[8]);var PostViewer=function PostViewer(_ref){var actionButtons=_ref.actionButtons,post=_ref.post,error=_ref.error,loading=_ref.loading;if(error){if(error.response&&error.response.status===404){return React.createElement(PostViewerBlock,null,\"\\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uB294 \\uD3EC\\uC2A4\\uD2B8 \\uC785\\uB2C8\\uB2E4.\");}return React.createElement(PostViewerBlock,null,\"\\uC624\\uB958 \\uBC1C\\uC0DD!\");}if(loading||!post){return null;}var title=post.title,body=post.body,user=post.user,publishedDate=post.publishedDate,tags=post.tags;return React.createElement(PostViewerBlock,null,React.createElement(Helmet,null,React.createElement(\"title\",null,title,\" -REACTERS\")),React.createElement(PostHead,null,React.createElement(\"h1\",null,title),React.createElement(SubInfo,{username:user.username,publishedDate:publishedDate,hasMarginTop:true}),React.createElement(Tags,{tags:tags})),actionButtons,React.createElement(PostContent,{dangerouslySetInnerHTML:{__html:body}}));};export default PostViewer;","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/components/post/PostViewer.js"],"names":["React","styled","palette","SubInfo","Tags","Helmet","PostViewerBlock","div","PostHead","gray","PostContent","PostViewer","actionButtons","post","error","loading","response","status","title","body","user","publishedDate","tags","username","__html"],"mappings":"4yBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,OAASC,MAAT,KAAuB,oBAAvB,CAEA,GAAMC,CAAAA,eAAe,CAAGL,MAAM,CAACM,GAAV,mBAArB,CAIA,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,CAACM,GAAV,oBACeL,OAAO,CAACO,IAAR,CAAa,CAAb,CADf,CAAd,CAUA,GAAMC,CAAAA,WAAW,CAAGT,MAAM,CAACM,GAAV,oBAENL,OAAO,CAACO,IAAR,CAAa,CAAb,CAFM,CAAjB,CAKA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA6C,IAA1CC,CAAAA,aAA0C,MAA1CA,aAA0C,CAA3BC,IAA2B,MAA3BA,IAA2B,CAArBC,KAAqB,MAArBA,KAAqB,CAAdC,OAAc,MAAdA,OAAc,CAC9D,GAAID,KAAJ,CAAW,CACT,GAAIA,KAAK,CAACE,QAAN,EAAkBF,KAAK,CAACE,QAAN,CAAeC,MAAf,GAA0B,GAAhD,CAAqD,CACnD,MAAO,qBAAC,eAAD,qFAAP,CACD,CACD,MAAO,qBAAC,eAAD,mCAAP,CACD,CACD,GAAIF,OAAO,EAAI,CAACF,IAAhB,CAAsB,CACpB,MAAO,KAAP,CACD,CAT6D,GAWtDK,CAAAA,KAXsD,CAWXL,IAXW,CAWtDK,KAXsD,CAW/CC,IAX+C,CAWXN,IAXW,CAW/CM,IAX+C,CAWzCC,IAXyC,CAWXP,IAXW,CAWzCO,IAXyC,CAWnCC,aAXmC,CAWXR,IAXW,CAWnCQ,aAXmC,CAWpBC,IAXoB,CAWXT,IAXW,CAWpBS,IAXoB,CAY9D,MACE,qBAAC,eAAD,MACE,oBAAC,MAAD,MACE,iCAAQJ,KAAR,cADF,CADF,CAIE,oBAAC,QAAD,MACE,8BAAKA,KAAL,CADF,CAEE,oBAAC,OAAD,EACE,QAAQ,CAAEE,IAAI,CAACG,QADjB,CAEE,aAAa,CAAEF,aAFjB,CAGE,YAAY,KAHd,EAFF,CAOE,oBAAC,IAAD,EAAM,IAAI,CAAEC,IAAZ,EAPF,CAJF,CAaGV,aAbH,CAcE,oBAAC,WAAD,EAAa,uBAAuB,CAAE,CAAEY,MAAM,CAAEL,IAAV,CAAtC,EAdF,CADF,CAkBD,CA9BD,CAgCA,cAAeR,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Helmet } from 'react-helmet-async';\n\nconst PostViewerBlock = styled.div`\n  margin-top: 4rem;\n`;\n\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({ actionButtons, post, error, loading }) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return <PostViewerBlock>존재하지 않는 포스트 입니다.</PostViewerBlock>;\n    }\n    return <PostViewerBlock>오류 발생!</PostViewerBlock>;\n  }\n  if (loading || !post) {\n    return null;\n  }\n\n  const { title, body, user, publishedDate, tags } = post;\n  return (\n    <PostViewerBlock>\n      <Helmet>\n        <title>{title} -REACTERS</title>\n      </Helmet>\n      <PostHead>\n        <h1>{title}</h1>\n        <SubInfo\n          username={user.username}\n          publishedDate={publishedDate}\n          hasMarginTop\n        />\n        <Tags tags={tags} />\n      </PostHead>\n      {actionButtons}\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\n    </PostViewerBlock>\n  );\n};\n\nexport default PostViewer;\n"]},"metadata":{},"sourceType":"module"}