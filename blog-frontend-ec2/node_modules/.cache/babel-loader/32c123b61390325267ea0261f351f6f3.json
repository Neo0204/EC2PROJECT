{"ast":null,"code":"import _slicedToArray from \"/Users/neo/Desktop/react/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neo/Desktop/react/blog/blog-frontend/src/containers/auth/LoginForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst LoginForm = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          password = form.password;\n    dispatch(login({\n      username,\n      password\n    }));\n  }; // 컴포넌트가 처음 렌더링될 때 form을 초기화\n\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('login 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      console.log('check API 성공');\n      console.log(user);\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('LocalStorage is not working');\n      }\n    }\n  }, [user, history]);\n  return React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","login","AuthForm","check","withRouter","LoginForm","history","dispatch","auth","user","form","authError","error","setError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst LoginForm = ({ history }) => {\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n\n  const [error, setError] = useState(null);\n\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(changeField({ form: 'login', key: name, value }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n  // 컴포넌트가 처음 렌더링될 때 form을 초기화\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('login 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      console.log('check API 성공');\n      console.log(user);\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('LocalStorage is not working');\n      }\n    }\n  }, [user, history]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    ></AuthForm>\n  );\n};\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}