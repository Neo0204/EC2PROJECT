{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/react/blog/blog-frontend/src/containers/auth/LoginForm.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user;\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          password = form.password;\n    dispatch(login(username, password));\n  }; // 컴포넌트가 처음 렌더링될 때 form을 초기화\n\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      return;\n    }\n\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  return React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useDispatch","useSelector","changeField","initializeForm","login","AuthForm","check","LoginForm","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,KAAtC,QAAmD,oBAAnD;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADsB,uBAEkBC,WAAW,CAAC,CAAC;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,MAAqB;AACvEC,IAAAA,IAAI,EAAEF,IAAI,CAACL,KAD4D;AAEvEK,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAF4D;AAGvEG,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHuD;AAIvEF,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJ4D,GAArB,CAAD,CAF7B;AAAA,QAEdC,IAFc,gBAEdA,IAFc;AAAA,QAERF,IAFQ,gBAERA,IAFQ;AAAA,QAEFG,SAFE,gBAEFA,SAFE;AAAA,QAESF,IAFT,gBAESA,IAFT;;AAStB,QAAMG,QAAQ,GAAGC,CAAC,IAAI;AAAA,sBACIA,CAAC,CAACC,MADN;AAAA,UACZC,KADY,aACZA,KADY;AAAA,UACLC,IADK,aACLA,IADK;AAEpBT,IAAAA,QAAQ,CAACN,WAAW,CAAC;AAAES,MAAAA,IAAI,EAAE,OAAR;AAAiBO,MAAAA,GAAG,EAAED,IAAtB;AAA4BD,MAAAA;AAA5B,KAAD,CAAZ,CAAR;AACD,GAHD;;AAKA,QAAMG,QAAQ,GAAGL,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACM,cAAF;AADoB,UAEZC,QAFY,GAEWV,IAFX,CAEZU,QAFY;AAAA,UAEFC,QAFE,GAEWX,IAFX,CAEFW,QAFE;AAGpBd,IAAAA,QAAQ,CAACJ,KAAK,CAACiB,QAAD,EAAWC,QAAX,CAAN,CAAR;AACD,GAJD,CAdsB,CAmBtB;;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACL,cAAc,CAAC,OAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,SAAJ,EAAe;AACbW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACA;AACD;;AAED,QAAIH,IAAJ,EAAU;AACRc,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAD,MAAAA,QAAQ,CAACF,KAAK,EAAN,CAAR;AACD;AACF,GAZQ,EAYN,CAACG,IAAD,EAAOG,SAAP,EAAkBJ,QAAlB,CAZM,CAAT;AAcA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAEG,IAFR;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA9CD;;AAgDA,eAAeZ,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(changeField({ form: 'login', key: name, value }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login(username, password));\n  };\n  // 컴포넌트가 처음 렌더링될 때 form을 초기화\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      return;\n    }\n\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    ></AuthForm>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}