{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/react/blog/blog-frontend/src/components/post/PostViewer.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport ErrorWithStack from '../../../node_modules/jest-util/build/ErrorWithStack';\nconst PostViewerBlock = styled.div`\n  margin-top: 4rem;\n`;\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\nconst SubInfo = styled.div`\n  margin-top: 1rem;\n  color: ${palette.gray[6]};\n  /* span  사이에 가운데 점 문자로 보여주기 */\n  span + span:before {\n    color: ${palette.gray[5]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7';\n  }\n`;\nconst Tags = styled.div`\n  margin-top: 0.5rem;\n  .tag {\n    display: inline-block;\n    color: ${palette.cyan[7]};\n    text-decoration: none;\n    margin-right: 0.5rem;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n`;\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({\n  post,\n  error,\n  loading\n}) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return React.createElement(PostViewerBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uB294 \\uD3EC\\uC2A4\\uD2B8 \\uC785\\uB2C8\\uB2E4.\");\n    }\n\n    return React.createElement(PostViewerBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\uC624\\uB958 \\uBC1C\\uC0DD!\");\n  }\n\n  if (loading || !post) {\n    return null;\n  }\n\n  const title = post.title,\n        body = post.body,\n        user = post.user,\n        publishedDate = post.publishedDate,\n        tags = post.tags;\n  return React.createElement(PostViewerBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(PostHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, title), React.createElement(SubInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"tester\")), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, new Date().toLocaleDateString())), React.createElement(Tags, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"#\\uD0DC\\uADF81\"), React.createElement(\"div\", {\n    className: \"tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"#\\uD0DC\\uADF82\"), React.createElement(\"div\", {\n    className: \"tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"#\\uD0DC\\uADF8 3\"))), React.createElement(PostContent, {\n    dangerouslySetInnerHTML: {\n      __html: `<p>Html <b>내용</b>입니다</p>`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n};\n\nexport default PostViewer;","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/components/post/PostViewer.js"],"names":["React","styled","palette","ErrorWithStack","PostViewerBlock","div","PostHead","gray","SubInfo","Tags","cyan","PostContent","PostViewer","post","error","loading","response","status","title","body","user","publishedDate","tags","Date","toLocaleDateString","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;;CAAnC;AAIA,MAAMC,QAAQ,GAAGL,MAAM,CAACI,GAAI;6BACCH,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;;;;;;;CAD7C;AAUA,MAAMC,OAAO,GAAGP,MAAM,CAACI,GAAI;;WAEhBH,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;;aAGdL,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;;;;CAL7B;AAYA,MAAME,IAAI,GAAGR,MAAM,CAACI,GAAI;;;;aAIXH,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;;;;eAIdR,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;;CAR/B;AAaA,MAAMI,WAAW,GAAGV,MAAM,CAACI,GAAI;;WAEpBH,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;CAF3B;;AAKA,MAAMK,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC/C,MAAID,KAAJ,EAAW;AACT,QAAIA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACnD,aAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAAP;AACD;;AACD,WAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;;AACD,MAAIF,OAAO,IAAI,CAACF,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAT8C,QAUvCK,KAVuC,GAUIL,IAVJ,CAUvCK,KAVuC;AAAA,QAUhCC,IAVgC,GAUIN,IAVJ,CAUhCM,IAVgC;AAAA,QAU1BC,IAV0B,GAUIP,IAVJ,CAU1BO,IAV0B;AAAA,QAUpBC,aAVoB,GAUIR,IAVJ,CAUpBQ,aAVoB;AAAA,QAULC,IAVK,GAUIT,IAVJ,CAULS,IAVK;AAY/C,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,IAAIK,IAAJ,GAAWC,kBAAX,EAAP,CAJF,CAFF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CARF,CADF,EAeE,oBAAC,WAAD;AACE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAG;AAAX,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAqBD,CAjCD;;AAmCA,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport ErrorWithStack from '../../../node_modules/jest-util/build/ErrorWithStack';\n\nconst PostViewerBlock = styled.div`\n  margin-top: 4rem;\n`;\n\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\nconst SubInfo = styled.div`\n  margin-top: 1rem;\n  color: ${palette.gray[6]};\n  /* span  사이에 가운데 점 문자로 보여주기 */\n  span + span:before {\n    color: ${palette.gray[5]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7';\n  }\n`;\n\nconst Tags = styled.div`\n  margin-top: 0.5rem;\n  .tag {\n    display: inline-block;\n    color: ${palette.cyan[7]};\n    text-decoration: none;\n    margin-right: 0.5rem;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n`;\n\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({ post, error, loading }) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return <PostViewerBlock>존재하지 않는 포스트 입니다.</PostViewerBlock>;\n    }\n    return <PostViewerBlock>오류 발생!</PostViewerBlock>;\n  }\n  if (loading || !post) {\n    return null;\n  }\n  const { title, body, user, publishedDate, tags } = post;\n\n  return (\n    <PostViewerBlock>\n      <PostHead>\n        <h1>{title}</h1>\n        <SubInfo>\n          <span>\n            <b>tester</b>\n          </span>\n          <span>{new Date().toLocaleDateString()}</span>\n        </SubInfo>\n        <Tags>\n          <div className=\"tag\">#태그1</div>\n          <div className=\"tag\">#태그2</div>\n          <div className=\"tag\">#태그 3</div>\n        </Tags>\n      </PostHead>\n      <PostContent\n        dangerouslySetInnerHTML={{ __html: `<p>Html <b>내용</b>입니다</p>` }}\n      />\n    </PostViewerBlock>\n  );\n};\n\nexport default PostViewer;\n"]},"metadata":{},"sourceType":"module"}