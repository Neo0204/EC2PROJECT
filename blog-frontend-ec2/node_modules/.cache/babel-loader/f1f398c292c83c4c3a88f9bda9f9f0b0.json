{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/react/blog/blog-frontend/src/containers/post/PostViewerContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport { withRouter } from 'react-router-dom';\nimport PostActionButtons from '../../components/post/PostActionButtons';\n\nconst PostViewerContainer = ({\n  match,\n  history\n}) => {\n  const postId = match.params.postId;\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    loading\n  }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n    user: user.user\n  })),\n        post = _useSelector.post,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    dispatch(readPost(postId)); // 언마운트 될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  return React.createElement(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    actionButtons: React.createElement(PostActionButtons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostViewerContainer);","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","readPost","unloadPost","PostViewer","withRouter","PostActionButtons","PostViewerContainer","match","history","postId","params","dispatch","post","loading","error","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;;AACA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,QAC1CC,MAD0C,GAC/BF,KAAK,CAACG,MADyB,CAC1CD,MAD0C;AAElD,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;;AAFkD,uBAGXC,WAAW,CAAC,CAAC;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,MAAwB;AACzED,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAD8D;AAEzEE,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAF6D;AAGzED,IAAAA,OAAO,EAAEA,OAAO,CAAC,gBAAD,CAHyD;AAIzEE,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJ8D,GAAxB,CAAD,CAHA;AAAA,QAG1CH,IAH0C,gBAG1CA,IAH0C;AAAA,QAGpCE,KAHoC,gBAGpCA,KAHoC;AAAA,QAG7BD,OAH6B,gBAG7BA,OAH6B;AAAA,QAGpBE,IAHoB,gBAGpBA,IAHoB;;AAUlDjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACV,QAAQ,CAACQ,MAAD,CAAT,CAAR,CADc,CAEd;;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACS,QAAD,EAAWF,MAAX,CANM,CAAT;AAQA,SACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,aAAa,EAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA1BD;;AA4BA,eAAeV,UAAU,CAACE,mBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport { withRouter } from 'react-router-dom';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nconst PostViewerContainer = ({ match, history }) => {\n  const { postId } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading, user } = useSelector(({ post, loading }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n    user: user.user,\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId));\n    // 언마운트 될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n\n  return (\n    <PostViewer\n      post={post}\n      loading={loading}\n      error={error}\n      actionButtons={<PostActionButtons />}\n    />\n  );\n};\n\nexport default withRouter(PostViewerContainer);\n"]},"metadata":{},"sourceType":"module"}