{"ast":null,"code":"import _objectSpread from \"/Users/neo/Desktop/react/blog-real/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/neo/Desktop/react/blog-real/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport { createAction, handleActions } from 'redux-actions';\nimport * as authAPI from '../lib/api/auth';\nimport { takeLatest, call } from 'redux-saga/effects';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\n\nconst _createRequestActionT = createRequestActionTypes('user/CHECK'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      CHECK = _createRequestActionT2[0],\n      CHECK_SUCCESS = _createRequestActionT2[1],\n      CHECK_FAILURE = _createRequestActionT2[2];\n\nconst LOGOUT = 'user/LOGOUT';\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); //localStorage에서 user를 제거\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout);\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, {\n    payload: user\n  }) => _objectSpread({}, state, {\n    user\n  }),\n  [CHECK_SUCCESS]: (state, {\n    payload: user\n  }) => _objectSpread({}, state, {\n    user,\n    checkError: null\n  }),\n  [CHECK_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    user: null,\n    checkError: error\n  }),\n  [LOGOUT]: state => _objectSpread({}, state, {\n    user: null\n  })\n}, initialState);","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog-real/blog-frontend/src/modules/user.js"],"names":["createRequestSaga","createRequestActionTypes","createAction","handleActions","authAPI","takeLatest","call","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","logoutSaga","userSaga","initialState","checkError","state","payload","error"],"mappings":";;AAAA,OAAOA,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,oBAAjC;AAEA,MAAMC,aAAa,GAAG,oBAAtB;;8BAC8CN,wBAAwB,CACpE,YADoE,C;;MAA/DO,K;MAAOC,a;MAAeC,a;;AAG7B,MAAMC,MAAM,GAAG,aAAf;AAEA,OAAO,MAAMC,WAAW,GAAGV,YAAY,CAACK,aAAD,EAAgBM,IAAI,IAAIA,IAAxB,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGZ,YAAY,CAACM,KAAD,CAA1B;AACP,OAAO,MAAMO,MAAM,GAAGb,YAAY,CAACS,MAAD,CAA3B;AAEP,MAAMK,SAAS,GAAGhB,iBAAiB,CAACQ,KAAD,EAAQJ,OAAO,CAACU,KAAhB,CAAnC;;AAEA,SAASG,gBAAT,GAA4B;AAC1B,MAAI;AACFC,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB,EADE,CAC+B;AAClC,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AACD,UAAUC,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMjB,IAAI,CAACF,OAAO,CAACW,MAAT,CAAV;AACAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AACD,OAAO,UAAUI,QAAV,GAAqB;AAC1B,QAAMnB,UAAU,CAACG,KAAD,EAAQQ,SAAR,CAAhB;AACA,QAAMX,UAAU,CAACK,aAAD,EAAgBO,gBAAhB,CAAhB;AACA,QAAMZ,UAAU,CAACM,MAAD,EAASY,UAAT,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBZ,EAAAA,IAAI,EAAE,IADa;AAEnBa,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,eAAevB,aAAa,CAC1B;AACE,GAACI,aAAD,GAAiB,CAACoB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEf;AAAX,GAAR,uBACZc,KADY;AAEfd,IAAAA;AAFe,IADnB;AAKE,GAACJ,aAAD,GAAiB,CAACkB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEf;AAAX,GAAR,uBACZc,KADY;AAEfd,IAAAA,IAFe;AAGfa,IAAAA,UAAU,EAAE;AAHG,IALnB;AAUE,GAAChB,aAAD,GAAiB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAR,uBACZF,KADY;AAEfd,IAAAA,IAAI,EAAE,IAFS;AAGfa,IAAAA,UAAU,EAAEG;AAHG,IAVnB;AAeE,GAAClB,MAAD,GAAUgB,KAAK,sBAAUA,KAAV;AAAiBd,IAAAA,IAAI,EAAE;AAAvB;AAfjB,CAD0B,EAkB1BY,YAlB0B,CAA5B","sourcesContent":["import createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport { createAction, handleActions } from 'redux-actions';\nimport * as authAPI from '../lib/api/auth';\nimport { takeLatest, call } from 'redux-saga/effects';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); //localStorage에서 user를 제거\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout);\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: state => ({ ...state, user: null }),\n  },\n  initialState,\n);\n"]},"metadata":{},"sourceType":"module"}