{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/react/blog/blog-frontend/src/components/write/Editor.js\";\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport 'quill/dist/quill.bubble.css';\nimport Quill from 'quill';\nimport palette from '../../lib/styles/palette';\nconst EditorBlock = styled(Responsive)`\n  /* 페이지 위아래 여백지정 */\n  padding-top: 5rem;\n  padding-bottom: 5rem;\n`;\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\nconst QuillWrapper = styled.div`\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor .ql-blank::before {\n    left: 0px;\n  }\n`;\n\nconst Editor = ({\n  title,\n  body,\n  onChangeField\n}) => {\n  const quillElement = useRef(null); // Quill을 적용할 DivElement\n\n  const quillInstance = useRef(null); // Quill 인스턴스 설정\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요...',\n      modules: {\n        toolbar: [[{\n          header: '1'\n        }, {\n          header: '2'\n        }], ['bold', 'italic', 'underline', 'strike'], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], ['bold', 'code-block', 'link', 'image']]\n      }\n    }); // quill에 text-change 이벤트 핸들러 등록\n    // 참고: https://quilljs.com/docs/api/#events\n\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({\n          key: 'body',\n          value: quill.root.innerHTML\n        });\n      }\n    });\n  }, [onChangeField]);\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (mounted.current) return;\n    mounted.current = true;\n    quillInstance.current.root.innerHTML = body;\n  }, [body]);\n  console.log(1 && mounted);\n\n  const onChangeTitle = e => {\n    onChangeField({\n      key: 'title',\n      value: e.target.value\n    });\n  };\n\n  return React.createElement(EditorBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TitleInput, {\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    onChange: onChangeTitle,\n    value: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(QuillWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: quillElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n};\n\nexport default Editor;","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/components/write/Editor.js"],"names":["React","useRef","useEffect","styled","Responsive","Quill","palette","EditorBlock","TitleInput","input","gray","QuillWrapper","div","Editor","title","body","onChangeField","quillElement","quillInstance","current","theme","placeholder","modules","toolbar","header","list","quill","on","delta","oldDelta","source","key","value","root","innerHTML","mounted","console","log","onChangeTitle","e","target"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport 'quill/dist/quill.bubble.css';\nimport Quill from 'quill';\nimport palette from '../../lib/styles/palette';\n\nconst EditorBlock = styled(Responsive)`\n  /* 페이지 위아래 여백지정 */\n  padding-top: 5rem;\n  padding-bottom: 5rem;\n`;\n\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n\nconst QuillWrapper = styled.div`\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor .ql-blank::before {\n    left: 0px;\n  }\n`;\n\nconst Editor = ({ title, body, onChangeField }) => {\n  const quillElement = useRef(null); // Quill을 적용할 DivElement\n  const quillInstance = useRef(null); // Quill 인스턴스 설정\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요...',\n      modules: {\n        toolbar: [\n          [{ header: '1' }, { header: '2' }],\n          ['bold', 'italic', 'underline', 'strike'],\n          [{ list: 'ordered' }, { list: 'bullet' }],\n          ['bold', 'code-block', 'link', 'image'],\n        ],\n      },\n    });\n    // quill에 text-change 이벤트 핸들러 등록\n    // 참고: https://quilljs.com/docs/api/#events\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\n      }\n    });\n  }, [onChangeField]);\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (mounted.current) return;\n    mounted.current = true;\n    quillInstance.current.root.innerHTML = body;\n  }, [body]);\n  console.log(1 && mounted);\n  const onChangeTitle = e => {\n    onChangeField({ key: 'title', value: e.target.value });\n  };\n\n  return (\n    <EditorBlock>\n      <TitleInput\n        placeholder=\"제목을 입력하세요\"\n        onChange={onChangeTitle}\n        value={title}\n      />\n      <QuillWrapper>\n        <div ref={quillElement}></div>\n      </QuillWrapper>\n    </EditorBlock>\n  );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}