{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/react/blog-real/blog-frontend/src/containers/auth/LoginForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst LoginForm = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    form,\n    auth,\n    authError,\n    user\n  } = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  }));\n  const [error, setError] = useState(null);\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = form;\n    dispatch(login({\n      username,\n      password\n    }));\n  }; // 컴포넌트가 처음 렌더링될 때 form을 초기화\n\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('login 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      console.log('check API 성공');\n      console.log(user);\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('LocalStorage is not working');\n      }\n    }\n  }, [user, history]);\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog-real/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","login","AuthForm","check","withRouter","LoginForm","history","dispatch","form","auth","authError","user","error","setError","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,KAAtC,QAAmD,oBAAnD;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAAkCb,WAAW,CAAC,CAAC;AAAEW,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,MAAqB;AACvEH,IAAAA,IAAI,EAAEC,IAAI,CAACR,KAD4D;AAEvEQ,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAF4D;AAGvEC,IAAAA,SAAS,EAAED,IAAI,CAACC,SAHuD;AAIvEC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJ4D,GAArB,CAAD,CAAnD;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMkB,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,QAAQ,CAACR,WAAW,CAAC;AAAES,MAAAA,IAAI,EAAE,OAAR;AAAiBW,MAAAA,GAAG,EAAEF,IAAtB;AAA4BD,MAAAA;AAA5B,KAAD,CAAZ,CAAR;AACD,GAHD;;AAKA,QAAMI,QAAQ,GAAGL,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBf,IAA/B;AACAD,IAAAA,QAAQ,CAACN,KAAK,CAAC;AAAEqB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAN,CAAR;AACD,GAJD,CAhBiC,CAqBjC;;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,cAAc,CAAC,OAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAJ,EAAe;AACbc,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACAG,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACA;AACD;;AAED,QAAIJ,IAAJ,EAAU;AACRe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAlB,MAAAA,QAAQ,CAACJ,KAAK,EAAN,CAAR;AACD;AACF,GAZQ,EAYN,CAACM,IAAD,EAAOC,SAAP,EAAkBH,QAAlB,CAZM,CAAT;AAcAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAJ,EAAU;AACRa,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAL,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;;AACA,UAAI;AACFC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAenB,IAAf,CAA7B;AACD,OAFD,CAEE,OAAOI,CAAP,EAAU;AACVS,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;AACF,GAXQ,EAWN,CAACd,IAAD,EAAOL,OAAP,CAXM,CAAT;AAaA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,QAAQ,EAAEM,QAHZ;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAKE,IAAA,KAAK,EAAER,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CA9DD;;AAgEA,eAAeR,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst LoginForm = ({ history }) => {\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n\n  const [error, setError] = useState(null);\n\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(changeField({ form: 'login', key: name, value }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n  // 컴포넌트가 처음 렌더링될 때 form을 초기화\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('login 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      console.log('check API 성공');\n      console.log(user);\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('LocalStorage is not working');\n      }\n    }\n  }, [user, history]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    ></AuthForm>\n  );\n};\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}