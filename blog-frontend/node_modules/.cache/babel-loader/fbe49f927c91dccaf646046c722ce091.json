{"ast":null,"code":"import { startLoading, finishLoading } from '../modules/loading';\nimport { call, put } from 'redux-saga/effects';\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return function* (action) {\n    yield put(startLoading(type));\n\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog-real/blog-frontend/src/lib/createRequestSaga.js"],"names":["startLoading","finishLoading","call","put","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","response","payload","data","meta","e","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AAEA,OAAO,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;AAC9C,QAAMC,OAAO,GAAI,GAAED,IAAK,UAAxB;AACA,QAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,SAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,CAAP;AACD,CAJM;AAMP,eAAe,SAASC,iBAAT,CAA2BH,IAA3B,EAAiCI,OAAjC,EAA0C;AACvD,QAAMH,OAAO,GAAI,GAAED,IAAK,UAAxB;AACA,QAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;AAEA,SAAO,WAAUK,MAAV,EAAkB;AACvB,UAAMP,GAAG,CAACH,YAAY,CAACK,IAAD,CAAb,CAAT;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMT,IAAI,CAACO,OAAD,EAAUC,MAAM,CAACE,OAAjB,CAA3B;AACA,YAAMT,GAAG,CAAC;AAAEE,QAAAA,IAAI,EAAEC,OAAR;AAAiBM,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAnC;AAAyCC,QAAAA,IAAI,EAAEH;AAA/C,OAAD,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMZ,GAAG,CAAC;AAAEE,QAAAA,IAAI,EAAEE,OAAR;AAAiBK,QAAAA,OAAO,EAAEG,CAA1B;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAAD,CAAT;AACD;;AACD,UAAMb,GAAG,CAACF,aAAa,CAACI,IAAD,CAAd,CAAT;AACD,GATD;AAUD","sourcesContent":["import { startLoading, finishLoading } from '../modules/loading';\nimport { call, put } from 'redux-saga/effects';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type));\n    try {\n      const response = yield call(request, action.payload);\n      yield put({ type: SUCCESS, payload: response.data, meta: response });\n    } catch (e) {\n      yield put({ type: FAILURE, payload: e, error: true });\n    }\n    yield put(finishLoading(type));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}