{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/neo/Desktop/react/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  padding-top: 3rem;\\n  padding-bottom: 3rem;\\n  /* \\uB9E8 \\uC704 \\uD3EC\\uC2A4\\uD2B8\\uB294 padding-top \\uC5C6\\uC74C */\\n  &:first-child {\\n    padding-top: 0;\\n  }\\n  & + & {\\n    border-top: 1px solid \",\";\\n  }\\n\\n  h2 {\\n    font-size: 2rem;\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    &:hover {\\n      color: \",\";\\n    }\\n    p {\\n      margin-top: 2rem;\\n    }\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  margin-bottom: 3rem;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import Button from'../common/Button';import palette from'../../lib/styles/palette';import SubInfo from'../common/SubInfo';import Tags from'../common/Tags';import Responsive from'../common/Responsive';import{Link}from'react-router-dom';var PostListBlock=styled(Responsive)(_templateObject());var WritePostButtonWrapper=styled.div(_templateObject2());var PostItemBlock=styled.div(_templateObject3(),palette.gray[2],palette.gray[6]);var PostItem=function PostItem(_ref){var post=_ref.post;var publishedDate=post.publishedDate,user=post.user,tags=post.tags,title=post.title,body=post.body,_id=post._id;return React.createElement(PostItemBlock,null,React.createElement(\"h2\",null,React.createElement(Link,{to:\"/@\".concat(user.username,\"/\").concat(_id)},title)),React.createElement(SubInfo,{username:user.username,publishedDate:new Date(publishedDate)}),React.createElement(Tags,{tags:tags}),React.createElement(\"p\",null,body));};var PostList=function PostList(_ref2){var posts=_ref2.posts,loading=_ref2.loading,error=_ref2.error,showWriteButton=_ref2.showWriteButton;if(error){return React.createElement(PostListBlock,null,\"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");}return React.createElement(PostListBlock,null,React.createElement(WritePostButtonWrapper,null,showWriteButton&&React.createElement(Button,{cyan:true,to:\"/write\"},\"\\uC0C8 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\")),!loading&&posts&&React.createElement(\"div\",null,posts.map(function(post){return React.createElement(PostItem,{post:post,key:post._id});})));};export default PostList;","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/components/posts/PostList.js"],"names":["React","styled","Button","palette","SubInfo","Tags","Responsive","Link","PostListBlock","WritePostButtonWrapper","div","PostItemBlock","gray","PostItem","post","publishedDate","user","tags","title","body","_id","username","Date","PostList","posts","loading","error","showWriteButton","map"],"mappings":"uiCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,aAAa,CAAGP,MAAM,CAACK,UAAD,CAAT,mBAAnB,CAIA,GAAMG,CAAAA,sBAAsB,CAAGR,MAAM,CAACS,GAAV,oBAA5B,CAMA,GAAMC,CAAAA,aAAa,CAAGV,MAAM,CAACS,GAAV,oBAQSP,OAAO,CAACS,IAAR,CAAa,CAAb,CART,CAgBJT,OAAO,CAACS,IAAR,CAAa,CAAb,CAhBI,CAAnB,CAwBA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,IACrBC,CAAAA,aADqB,CAC2BD,IAD3B,CACrBC,aADqB,CACNC,IADM,CAC2BF,IAD3B,CACNE,IADM,CACAC,IADA,CAC2BH,IAD3B,CACAG,IADA,CACMC,KADN,CAC2BJ,IAD3B,CACMI,KADN,CACaC,IADb,CAC2BL,IAD3B,CACaK,IADb,CACmBC,GADnB,CAC2BN,IAD3B,CACmBM,GADnB,CAE7B,MACE,qBAAC,aAAD,MACE,8BACE,oBAAC,IAAD,EAAM,EAAE,aAAOJ,IAAI,CAACK,QAAZ,aAAwBD,GAAxB,CAAR,EAAwCF,KAAxC,CADF,CADF,CAIE,oBAAC,OAAD,EACE,QAAQ,CAAEF,IAAI,CAACK,QADjB,CAEE,aAAa,CAAE,GAAIC,CAAAA,IAAJ,CAASP,aAAT,CAFjB,EAJF,CAQE,oBAAC,IAAD,EAAM,IAAI,CAAEE,IAAZ,EARF,CASE,6BAAIE,IAAJ,CATF,CADF,CAaD,CAfD,CAiBA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,OAAgD,IAA7CC,CAAAA,KAA6C,OAA7CA,KAA6C,CAAtCC,OAAsC,OAAtCA,OAAsC,CAA7BC,KAA6B,OAA7BA,KAA6B,CAAtBC,eAAsB,OAAtBA,eAAsB,CAC/D,GAAID,KAAJ,CAAW,CACT,MAAO,qBAAC,aAAD,iEAAP,CACD,CAED,MACE,qBAAC,aAAD,MACE,oBAAC,sBAAD,MACGC,eAAe,EACd,oBAAC,MAAD,EAAQ,IAAI,KAAZ,CAAa,EAAE,CAAC,QAAhB,2CAFJ,CADF,CASG,CAACF,OAAD,EAAYD,KAAZ,EACC,+BACGA,KAAK,CAACI,GAAN,CAAU,SAAAd,IAAI,QACb,qBAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,CAAsB,GAAG,CAAEA,IAAI,CAACM,GAAhC,EADa,EAAd,CADH,CAVJ,CADF,CAmBD,CAxBD,CA0BA,cAAeG,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport Responsive from '../common/Responsive';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\n\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin-top: 0;\n    margin-bottom: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n    p {\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst PostItem = ({ post }) => {\n  const { publishedDate, user, tags, title, body, _id } = post;\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${user.username}/${_id}`}>{title}</Link>\n      </h2>\n      <SubInfo\n        username={user.username}\n        publishedDate={new Date(publishedDate)}\n      ></SubInfo>\n      <Tags tags={tags}></Tags>\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\n  if (error) {\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\n  }\n\n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n        {showWriteButton && (\n          <Button cyan to=\"/write\">\n            새 글 작성하기\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/* 로딩 중이 아니고, 포스트배열이 존재할 때만 보여 줌 */}\n      {!loading && posts && (\n        <div>\n          {posts.map(post => (\n            <PostItem post={post} key={post._id} />\n          ))}\n        </div>\n      )}\n    </PostListBlock>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}