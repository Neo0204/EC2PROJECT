{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/react/blog/blog-frontend/src/containers/post/PostViewerContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport { withRouter } from 'react-router-dom';\n\nconst PostViewerContainer = ({\n  match\n}) => {\n  const postId = match.params.postId;\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    loading\n  }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST']\n  })),\n        post = _useSelector.post,\n        error = _useSelector.error,\n        loading = _useSelector.loading;\n\n  useEffect(() => {\n    dispatch(readPost(postId)); // 언마운트 될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  return React.createElement(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    actionButtons: React.createElement(PostActionButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostViewerContainer);","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog/blog-frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","readPost","unloadPost","PostViewer","withRouter","PostViewerContainer","match","postId","params","dispatch","post","loading","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,QACjCC,MADiC,GACtBD,KAAK,CAACE,MADgB,CACjCD,MADiC;AAEzC,QAAME,QAAQ,GAAGV,WAAW,EAA5B;;AAFyC,uBAGRC,WAAW,CAAC,CAAC;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,MAAwB;AACnED,IAAAA,IAAI,EAAEA,IAAI,CAACA,IADwD;AAEnEE,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFuD;AAGnED,IAAAA,OAAO,EAAEA,OAAO,CAAC,gBAAD;AAHmD,GAAxB,CAAD,CAHH;AAAA,QAGjCD,IAHiC,gBAGjCA,IAHiC;AAAA,QAG3BE,KAH2B,gBAG3BA,KAH2B;AAAA,QAGpBD,OAHoB,gBAGpBA,OAHoB;;AASzCb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACR,QAAQ,CAACM,MAAD,CAAT,CAAR,CADc,CAEd;;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACO,QAAD,EAAWF,MAAX,CANM,CAAT;AAQA,SACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,aAAa,EAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAzBD;;AA2BA,eAAeR,UAAU,CAACC,mBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport { withRouter } from 'react-router-dom';\n\nconst PostViewerContainer = ({ match }) => {\n  const { postId } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading } = useSelector(({ post, loading }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId));\n    // 언마운트 될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n\n  return (\n    <PostViewer\n      post={post}\n      loading={loading}\n      error={error}\n      actionButtons={<PostActionButton />}\n    />\n  );\n};\n\nexport default withRouter(PostViewerContainer);\n"]},"metadata":{},"sourceType":"module"}