{"ast":null,"code":"import createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport { createAction, handleActions } from 'redux-actions';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_POSTS, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\nexport const listPosts = createAction(LIST_POSTS, ({\n  tags,\n  username,\n  page\n}) => ({\n  tags,\n  username,\n  page\n}));\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\nconst initialState = {\n  posts: null,\n  error: null,\n  lastPage: 1\n};\nconst posts = handleActions({\n  [LIST_POSTS_SUCCESS]: (state, {\n    payload: posts,\n    meta: response\n  }) => ({ ...state,\n    posts,\n    lastPage: parseInt(response.headers['last-page'], 10)\n  }),\n  [LIST_POSTS_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  })\n}, initialState);\nexport default posts;","map":{"version":3,"sources":["/Users/neo/Desktop/react/blog-real/blog-frontend/src/modules/posts.js"],"names":["createRequestSaga","createRequestActionTypes","createAction","handleActions","postsAPI","takeLatest","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","tags","username","page","listPostsSaga","postsSaga","initialState","posts","error","lastPage","state","payload","meta","response","parseInt","headers"],"mappings":"AAAA,OAAOA,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFP,wBAAwB,CAAC,kBAAD,CAJ5B;AAMA,OAAO,MAAMQ,SAAS,GAAGP,YAAY,CACnCI,UADmC,EAEnC,CAAC;AAAEI,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,MAA+B;AAAEF,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAA/B,CAFmC,CAA9B;AAKP,MAAMC,aAAa,GAAGb,iBAAiB,CAACM,UAAD,EAAaF,QAAQ,CAACK,SAAtB,CAAvC;AAEA,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAMT,UAAU,CAACC,UAAD,EAAaO,aAAb,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,IAAtB;AAA4BC,EAAAA,QAAQ,EAAE;AAAtC,CAArB;AAEA,MAAMF,KAAK,GAAGb,aAAa,CACzB;AACE,GAACI,kBAAD,GAAsB,CAACY,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEJ,KAAX;AAAkBK,IAAAA,IAAI,EAAEC;AAAxB,GAAR,MAAgD,EACpE,GAAGH,KADiE;AAEpEH,IAAAA,KAFoE;AAGpEE,IAAAA,QAAQ,EAAEK,QAAQ,CAACD,QAAQ,CAACE,OAAT,CAAiB,WAAjB,CAAD,EAAgC,EAAhC;AAHkD,GAAhD,CADxB;AAME,GAAChB,kBAAD,GAAsB,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAAgC,EAAE,GAAGE,KAAL;AAAYF,IAAAA;AAAZ,GAAhC;AANxB,CADyB,EASzBF,YATyB,CAA3B;AAYA,eAAeC,KAAf","sourcesContent":["import createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport { createAction, handleActions } from 'redux-actions';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst [\n  LIST_POSTS,\n  LIST_POSTS_SUCCESS,\n  LIST_POSTS_FAILURE,\n] = createRequestActionTypes('posts/LIST_POSTS');\n\nexport const listPosts = createAction(\n  LIST_POSTS,\n  ({ tags, username, page }) => ({ tags, username, page }),\n);\n\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\n\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\n\nconst initialState = { posts: null, error: null, lastPage: 1 };\n\nconst posts = handleActions(\n  {\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\n      ...state,\n      posts,\n      lastPage: parseInt(response.headers['last-page'], 10),\n    }),\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({ ...state, error }),\n  },\n  initialState,\n);\n\nexport default posts;\n"]},"metadata":{},"sourceType":"module"}